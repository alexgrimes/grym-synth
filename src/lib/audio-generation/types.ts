/**
 * Mathematical structure generated by XenakisLDM
 */
export interface MathematicalStructure {
  type: 'stochastic' | 'sieve' | 'gameTheory' | 'setTheory' | 'granular';
  parameters: Record<string, any>;
  timeEvolution: Record<string, number[]>;
  structures?: Record<string, any>;
  visualization?: any;
}

/**
 * Time-based parameter evolution data
 */
export interface TimeEvolutionData {
  timePoints: number[];
  parameterValues: Array<Record<string, any>>;
  totalDuration: number;
}

/**
 * Result of spectral analysis
 */
export interface SpectralAnalysisResult {
  frequencies: number[];
  magnitudes: number[];
  phases?: number[];
  spectralCentroid: number;
  spectralSpread: number;
  spectralFlux: number[];
  harmonicity: number;
}

/**
 * Mathematical adjustment recommendation from feedback system
 */
export interface MathematicalAdjustmentRecommendation {
  parameterPath: string;
  currentValue: number;
  recommendedValue: number;
  confidence: number;
  explanation?: string;
}

/**
 * LLM reasoning process for feedback system
 */
export interface FeedbackReasoningProcess {
  observations: string[];
  analysis: string;
  recommendations: MathematicalAdjustmentRecommendation[];
  nextAction: 'continue' | 'terminate' | 'adjust';
  explanation: string;
}